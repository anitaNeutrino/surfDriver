#include <linux/kernel.h>
#include <linux/module.h>
#include <asm/uaccess.h>
#include <asm/i387.h>

#include "surfDriver.h"

unsigned int *surfDriver_datatransfer(struct surfDriver_dev *devp,
				      unsigned int *buffer,
				      unsigned int count) {
  int i;
  volatile unsigned int *p;

  unsigned int *bufp;
  
  buffer[0] = devp->surf->buffer_status;
  buffer[1] = devp->surf->event_id;
  /*
   * Test braindead readout.
   */
  p = devp->lab;
  bufp = &buffer[2];

  memcpy(bufp, p, count);
  // Just do a clear event here for now.
  devp->surf->clear = SURF_CLEAR_EVT;
  return buffer;
}

unsigned int *surfDriver_hktransfer(struct surfDriver_dev *devp,
				      unsigned int *buffer,
				      unsigned int count) {
  int i;
  volatile unsigned int *p;
  unsigned int *bufp;
  /*
   * Test braindead readout.
   */
  p = devp->hk;
  bufp = buffer;
  memcpy(buffer, p, count);
  return buffer;
}


